{"remainingRequest":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/src/components/apps/ViewApp.vue?vue&type=style&index=0&id=3594e1e2&scoped=true&lang=css","dependencies":[{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/src/components/apps/ViewApp.vue","mtime":1617982978731},{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWItbGluZSB7CiAgICBncmlkLWNvbHVtbjogMTsKICAgIGdyaWQtcm93OiAxOwp9Ci52aWV3X2FwcCB7CiAgICBkaXNwbGF5OiBncmlkOwogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxODVweCAxZnI7CiAgICBncmlkLWNvbHVtbi1nYXA6IDE1cHg7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KLmFwcF9saXN0IHsKICAgIGJhY2tncm91bmQ6ICMxRTFFMUU7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgaGVpZ2h0OiBtYXgtY29udGVudDsKICAgIG1pbi1oZWlnaHQ6IDIyNXB4OwogICAgbWF4LWhlaWdodDogMTAwJTsKICAgIG92ZXJmbG93LXk6IHNjcm9sbDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMzMDM2M0Q7Cn0KLmFwcF9uYW1lX2xpc3QgewogICAgbWFyZ2luLXRvcDogMjVweDsKICAgIHBhZGRpbmc6IDAgN3B4Owp9Ci5hcHAtbmFtZSB7CiAgICBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM1MGUzYzIgMCUsIzEwZDU3NCAxMDAlKTsKICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0OwogICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50OyAKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgcGFkZGluZzogNXB4OwogICAgbWFyZ2luOiA1cHggMDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMxMGQ1NzQ7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBib3JkZXItc3R5bGU6IGRhc2hlZDsKfQouYXBwLW5hbWU6aG92ZXIgewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Cn0K"},{"version":3,"sources":["/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/src/components/apps/ViewApp.vue"],"names":[],"mappings":"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","file":"/Users/konstantingasser/go/src/github.com/KonstantinGasser/datalabs/frontend/webapp/src/components/apps/ViewApp.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"view_app\">\n        <div class=\"app_list\">\n            <div class=\"add_new_app d-flex justify-center align-center\">\n                <button @click=\"modeCreateApp()\" class=\"btn btn-standard\">Create new App <span class=\"icon icon-plus\"></span></button>\n            </div>\n            <div class=\"app_name_list\">\n                {{isInCreateMode}}\n                <p class=\"info-text\" v-if=\"app_list == null || app_list.length === 0\">\n                    Mhm looks like you do not have any apps yet - <a @click=\"modeCreateApp()\">go create one!</a>\n                </p>\n                <div class=\"app-name d-flex justify-between align-center\" v-for=\"app in app_list\" :key=\"app.uuid\">\n                    <span class=\"dots standard-font\" @click=\"getAppDetails(app.uuid)\">{{ app.name }}</span>\n                    <!-- <span class=\"icon icon-delete hover big\" @click=\"removeApp(app.uuid)\"></span> -->\n                </div>\n            </div>\n        </div>\n        <div>\n            <Tabs v-if=\"!isInCreateMode\" ref=\"Tabs\" :class=\"{ block: blockTabs }\" :initTab=\"'App Details'\" :tabs=\"[{name:'App Details'},{name:'Member'}]\" @tabChange=\"tabChange\"/>\n            <TabCreateApp v-if=\"isInCreateMode\" @createdApp=\"updateState\" />\n            <TabAppDetails ref=\"tab_app_token\" @drop_app=\"updateState\" v-cloak v-if=\"activeTab === 'App Details' && !isInCreateMode\" :app=\"activeApp\"/>\n            <TabMember ref=\"tab_member\" v-if=\"activeTab === 'Member' && !isInCreateMode\" :member_list=\"activeApp.member\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Tabs from '@/components/utils/Tabs.vue';\n    import TabAppDetails from '@/components/apps/TabAppDetails.vue';\n    import TabCreateApp from '@/components/apps/TabCreateApp.vue';\n    import TabMember from '@/components/apps/TabMember.vue';\n    import axios from 'axios';\n    export default {\n        name: 'ViewApp',\n        components: {\n            Tabs,\n            TabCreateApp,\n            TabAppDetails,\n            TabMember,\n        },\n        computed: {\n            blockTabs() {\n                return this.tabsBlocked;\n            },\n            showCreateApp() {\n                return this.isInCreateMode;\n            },\n            app_list() {\n                return this.apps;\n            }\n        },\n        data() {\n            return {\n                isInCreateMode: false,\n                activeTab: 'App Details',\n                tabsBlocked: false,\n                newApp: { name: '' },\n                apps: [],\n                activeApp: {},\n            };\n        },\n        async created() {\n            // fetch initial data\n            this.getViewApp().then(data => {\n                this.apps = data.app_list;\n                this.activeApp = data.app_details;\n                console.log(\"AC: \", this.activeApp);\n                if (this.apps == null || this.apps.length === 0) {\n                    this.isInCreateMode = true;\n                } else {\n                    this.isInCreateMode = false;\n                    // if apps call full app \n                }\n                // if (this.app !== null && this.apps.length === 0) this.isInCreateMode = true;\n            }).catch(error => {\n               if (err.response.status === 401) {\n                        localStorage.removeItem('token');\n                        this.$router.replace({ name: 'login' });\n                }\n                this.isInCreateMode = true;\n            });\n            \n        },\n        props: ['status'],\n        methods: {\n            updateState(event) {\n                console.log(event);\n                switch (event.type) {\n                    case \"show_app\":\n                        this.isInCreateMode = false;\n                        // update app list on the left to show newly created app\n                        this.getViewApp().then(data => {\n                            this.apps = data.app_list;\n                            this.activeApp = data.app_details;\n                        }).catch(error => {\n                            if (error.response.status === 401) {\n                                localStorage.removeItem('token');\n                                this.$router.replace({ name: 'login' });\n                            }\n                            console.log(error);\n                            this.$toast.error(\"could not refresh app list\");\n                        });\n                        break;\n                    case \"drop_app\":\n                        this.isInCreateMode = true;\n                        this.apps = this.apps.filter(item => item.uuid != event.app_uuid);\n                        \n                        break;\n                    default:\n                        break;\n                }\n                this.isInCreateMode = false;\n                \n            },\n            modeCreateApp() {\n                this.isInCreateMode = true;\n            },\n            async getViewApp() {\n                let options = {\n                    headers: {\n                        'Authorization': localStorage.getItem(\"token\"),\n                    }\n                };\n                const res = await axios.get(\"http://localhost:8080/api/v2/view/app/details\", options)\n                if (res.data == null || res.status >= 400) {\n                    this.isInCreateMode = true;\n                    console.log(this.isInCreateMode);\n                    return null;\n                }\n                return res.data;\n                \n            },\n            async getAppDetails(uuid) {\n                let options = {\n                    headers: {\n                        'Authorization': localStorage.getItem(\"token\"),\n                    }\n                };\n                axios.get(\"http://localhost:8080/api/v2/view/app/get?uuid=\"+uuid, options).then(resp => {\n                    this.activeApp = resp.data.app;\n                }).catch(error => {\n                    console.log(error);\n                });\n            },\n            tabChange(tab) {\n                this.isInCreateMode = false;\n                this.activeTab = tab;\n            },\n            enableDisableTabs(toggle) {\n                this.tabsBlocked = toggle;\n                // block tab change by sending toggle to @Tabs\n                this.$refs.Tabs.block = this.tabsBlocked;\n            }\n        },\n    };\n</script>\n\n<style scoped>\n.tab-line {\n    grid-column: 1;\n    grid-row: 1;\n}\n.view_app {\n    display: grid;\n    grid-template-columns: 185px 1fr;\n    grid-column-gap: 15px;\n    height: 100%;\n}\n.app_list {\n    background: #1E1E1E;\n    border-radius: 8px;\n    padding: 15px;\n    height: max-content;\n    min-height: 225px;\n    max-height: 100%;\n    overflow-y: scroll;\n    border: 1px solid #30363D;\n}\n.app_name_list {\n    margin-top: 25px;\n    padding: 0 7px;\n}\n.app-name {\n    background:linear-gradient(135deg, #50e3c2 0%,#10d574 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent; \n    font-size: 16px;\n    font-weight: bold;\n    padding: 5px;\n    margin: 5px 0;\n    border: 1px solid #10d574;\n    border-radius: 8px;\n    border-style: dashed;\n}\n.app-name:hover {\n    cursor: pointer;\n    text-decoration: underline;\n}\n</style>"]}]}