syntax = "proto3";

package token_service;


service Token {
    rpc IssueUserToken(IssueUserTokenRequest) returns (IssueUserTokenResponse) {}
    rpc VerifyUserToken(VerifyUserTokenRequest) returns (VerifyUserTokenResponse) {}

    rpc IssueAppToken(IssueAppTokenRequest) returns (IssueAppTokenResponse) {}
    rpc VerifyAppToken(VerifyAppTokenRequest) returns (VerifyAppTokenResponse) {}
}

// RPC VERIFY APP TOKEN
message VerifyAppTokenRequest {
    string tracing_ID = 1;
    string token = 2;
}

message VerifyAppTokenResponse {
    int32 status_code = 1;
    string msg = 2;
    AppClaims app_claims = 3;
}

// RPC ISSUE APP TOKEN
message IssueAppTokenRequest {
    string tracing_ID = 1;
    string orgnAndAppHash = 2;
    string app_uuid = 3;
    string origin = 4;
}

message IssueAppTokenResponse {
    int32 status_code = 1;
    string msg = 2;
    string app_token = 3;
}

// RPC ISSUE USER TOKEN
message IssueUserTokenRequest {
    string tracing_ID = 1;
    UserClaim claim = 2;
}
message IssueUserTokenResponse {
    int32 status_code = 1;
    string msg = 2; 
    string user_token = 3;
}
// ***************************

// RPC ISSUE USER TOKEN
message VerifyUserTokenRequest {
    string tracing_ID = 1;
    string user_token = 2;
}
message VerifyUserTokenResponse {
    int32 status_code = 1;
    string msg = 2;
    UserClaim claim = 3;
}
// ***************************


// common types
message UserClaim {
    string uuid = 1;
    string orgn_domain = 2;
}

message AppClaims {
    string app_uuid = 1;
    string orgnAndAppHash = 2;
}